module alu_full_sels (

    input alufn,
    //ASEL INPUTS
    input asel[2],
    input ox0[10],
    input ox1[4],
    input ox4[4],
    input c[16],
    //BSEL INPUTS
    input bsel[2],
    input ox5[4],
    input ox6[4],
    //WDSEL INPUTS
    input wdsel[2],
    input obstacle_data[16],
    //ALU out
    output wdsel_out[16]
    
  ) {
  alu bitalu;
  
  always {
    
    //ASEL MULTIPLEXER
    case(asel){
      2b00:
        bitalu.a = ox0;
      2b01:
        bitalu.a = ox1;
      2b10:
        bitalu.a = ox4;
      default:
        bitalu.a = b00;
    }
    
    //BSEL MULTIPLEXER
    case(bsel){
      2b00:
        bitalu.b = c;
      2b10:
        bitalu.b = ox5;
      2b11:
        bitalu.b = ox6;
      default:
        bitalu.b = b00;
    }
    
    //ALU INPUT OUTPUTS
    bitalu.alufn_signal = alufn;
   
    //WDSEL MULTIPLEXER
    case(wdsel){
      2b00:
        wdsel_out = bitalu.out;
      2b01:
        wdsel_out = obstacle_data;
      default:
        wdsel_out = b0;
    }
  }
}
