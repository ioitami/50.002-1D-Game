module fsm_game (
    input clk,  // clock
    input rst,  // reset
    
    input left[1],
    input right[1],
    
    input dataOutA[16],
    input ox4[4],
    input ox7[2],
    
    output write_enable[1],
    output ox0_out[10],
    output ox1_out[4],
    output ox4_out[4],
    
    output random_reset[1],
    output random_next[1],
    output c,
    output asel,
    output bsel,
    output wdsel,
    output alufn,
    output regID
  ) {
  
  const SLOWCLOCK_SIZE = 27;
  counter slowClock(#SIZE(SLOWCLOCK_SIZE), .clk(clk), .rst(rst));
  edge_detector slowClockEdge(#RISE(1), #FALL(0), .clk(clk));
  
  fsm controller(.clk(clk), .rst(rst)) = {SS, S0, S1, S2, S2A, S3, S4, S5, 
            S6, S6A, S7, S7A, S8, S9, S9A, S10, S10A, S11, S11A, S12};
  
  
  sig ox_0[10];
  sig ox_1[4];
  sig ox_2[2];
  
  //sig ox_4[4];

  always {
    slowClockEdge.in = slowClock.value[SLOWCLOCK_SIZE-1];
    
    //Decode DataGroupA
    ox_0 = dataOutA[9:0];
    ox_1 = dataOutA[13:10];
    ox_2 = dataOutA[15:14];
       
    //DEFAULT VALUES
    write_enable = 1b1;
    ox0_out = ox_0;
    ox1_out = ox_1;
    ox4_out = ox4;    
    random_reset = b1;
    random_next = b1;
    c = 1b0;
    asel = 1b0;
    bsel = 1b0;
    wdsel = 1b0;
    alufn = 1b0;
    regID = 1b0;
    
      case(controller.q){
        //MAIN MENU
        //===============================
        controller.SS: 
        
          //if(slowClockEdge.out == 1b1 && right == 1b1){
            //controller.d = controller.S0;
          //}
          //if(slowClockEdge.out == 1b1 && left == 1b1){
            controller.d = controller.S0;
          //}
          
        //===============================
              
        //SET SCORE TO 0
        //===============================
        controller.S0:
        
          write_enable = b1;
          
          ox0_out = 10b0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = 1b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
          
          controller.d = controller.S1;
        //===============================
                    
        //WRITE DEFAULT LOCATION
        //===============================
        controller.S1:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = b11;
          ox4_out = ox4;
        
          random_reset = b1;
          random_next = b1;
          
          c = b0;
          
          asel = b01;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0001;
          
          controller.d = controller.S2;
        //===============================
        
        //GENERATE RANDOM OBSTACLE
        //===============================
        controller.S2:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = 4b0111;
        
          random_reset = b0;
          random_next = b1;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b01;
          alufn = b000000;
          
          regID = 4b1111;
        
          controller.d = controller.S2A;
        //===============================
          
        //Y-Set value 7
        //===============================
        controller.S2A:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = 4b0111;
        
          random_reset = b0;
          random_next = b1;
          
          c = b0;
          
          asel = b10;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0100;

          controller.d = controller.S3;
        //===============================
        
        //CHECK BUTTON
        //===============================
        controller.S3:
      
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
        
          //If BOTH buttons held
          if(slowClockEdge.out == 1b1 && left == 1b1 && right == 1b1){
            controller.d = controller.S6;
          }
          //If Left button held
          else if(slowClockEdge.out == 1b1 && left == 1b1){
            controller.d = controller.S4;
          }
          //If right button held
          else if(slowClockEdge.out == 1b1 && right == 1b1){
            controller.d = controller.S5;
          }
          //If NO button held
          else if(slowClockEdge.out == 1b1){
            controller.d = controller.S6;
          }
        //===============================
        
        //MOVE LEFT
        //===============================
        controller.S4:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
          
          random_reset = b0;
          random_next = b0;
          
          c = b01;
          
          asel = b01;
          bsel = b00;
          wdsel = b00;
          alufn = b000001;
          
          regID = 4b0001;

          controller.d = controller.S6; 
        //===============================
        
        //MOVE RIGHT
        //===============================
        controller.S5:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b01;
          
          asel = b01;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0001;

          controller.d = controller.S6; 
        //===============================
        
        //CHECK PLAYER LOCATION LEFT
        //===============================
        controller.S6:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b01;
          bsel = b00;
          wdsel = b00;
          alufn = b110101;
          
          regID = 4b0111;

          controller.d = controller.S6A;
        //===============================
        
        //LEFT CHECK WALL COLLIDE
        //===============================
        controller.S6A:
          
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
          
          if(ox7 == b0){
            controller.d = controller.SS;
          }
          else{
            controller.d = controller.S7;
          } 
        //===============================
          
        //CHECK PLAYER LOCATION RIGHT
        //===============================
        controller.S7:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
          
          random_reset = b0;
          random_next = b0;
        
          c = b1000;
          
          asel = b01;
          bsel = b00;
          wdsel = b00;
          alufn = b110101;
          
          regID = 4b0111;

          controller.d = controller.S7A;
        //===============================
        
        //RIGHT CHECK WALL COLLIDE
        //===============================
        controller.S7A:
      
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
        
          if(ox7 == b1){
            controller.d = controller.SS;
          }
          else{
            controller.d = controller.S8;
          }      
        //===============================
            
        //OBSTACLE Y LOCATION -1
        //===============================
        controller.S8:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b01;
          
          asel = b10;
          bsel = b00;
          wdsel = b00;
          alufn = b000001;
          
          regID = 4b0100;

          controller.d = controller.S9;
        //===============================
          
        //Regfile height check + VISUAL UPDATE
        //===============================
        controller.S9:
      
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
        
          if(ox4 == 4b0000){
            controller.d = controller.S3;
          }
          else{
            controller.d = controller.S10;
          }

        //===============================
        
        //Check Player/Obstacle Collision Left
        //===============================
        controller.S10:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b00;
          
          asel = b01;
          bsel = b10;
          wdsel = b00;
          alufn = b110101;
          
          regID = 4b0111;

          controller.d = controller.S10A;
        //===============================
        
        //CHECK PLAYER POSITION > LEFT OBSTACLE HOLE
        //===============================
        controller.S10A:
      
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
        
          if(ox7 == 1b0){
            controller.d = controller.S11;
          }
          else{
            controller.d = controller.SS;
          }
        //===============================
        
        //Check Player/Obstacle Collision Right
        //===============================
        controller.S11:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
          
          random_reset = b0;
          random_next = b0;
        
          c = b00;
          
          asel = b01;
          bsel = b11;
          wdsel = b00;
          alufn = b110101;
          
          regID = 4b0111;

          controller.d = controller.S11A;
        //===============================
        
        //CHECK PLAYER POSITION > LEFT OBSTACLE HOLE
        //===============================
        controller.S11A:
      
          write_enable = b0;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b0;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;
        
          if(ox7 == 1b1){
            controller.d = controller.S12;
          }
          else{
            controller.d = controller.SS;
          }
        
        //ADD SCORE + 1
        //===============================
        controller.S12:
        
          write_enable = b1;
          
          ox0_out = ox_0;
          ox1_out = ox_1;
          ox4_out = ox4;
        
          random_reset = b0;
          random_next = b0;
          
          c = b01;
          
          asel = b00;
          bsel = b00;
          wdsel = b00;
          alufn = b000000;
          
          regID = 4b0000;

          controller.d = controller.S2; //Return to Gen Rand Obstacle
        //===============================
        //===============================
        
      }
  }
}
