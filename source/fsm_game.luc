module fsm_game (
    input clk,  // clock
    input rst,  // reset
    
    input left[1],
    input right[1],
    
    input raout[16],
    input rbout[16],
    
    output write_enable[1],
    output ra[4],
    output rb[4],
    output asel[2],
    output bsel[2],
    output wdsel[2],
    output alufn[6],
    output regID[4]
  ) {
  
  const SLOWCLOCK_SIZE = 27;
  counter slowClock(#SIZE(SLOWCLOCK_SIZE), .clk(clk), .rst(rst));
  edge_detector slowClockEdge(#RISE(1), #FALL(0), .clk(clk));
  
  fsm controller(.clk(clk), .rst(rst)) = {S0, S1, S2, S2A, S3, S4, S5, 
            S6, S6A, S7, S7A, S8, S9, S9A, S10, S10A, S11, S11A, S12};
    

  always {
    slowClockEdge.in = slowClock.value[SLOWCLOCK_SIZE-1];
           
    //DEFAULT VALUES
    write_enable = 0;
    ra = 0;
    rb = 0;
    asel = 0;    
    bsel = 0;
    wdsel = 0;
    alufn = 0;
    regID = 0;
    
      case(controller.q){
        //SET SCORE TO 0
        //===============================
        controller.S0: 
        
          write_enable = b1;
          asel = b01;
          bsel = b01;
          wdsel = b00;
          alufn = b000000;
          regID = b0000;
        
          controller.d = controller.S1;
        //===============================
        
        //WRITE DEFAULT X LOCATION
        //===============================
        controller.S1: 
        
          write_enable = b1;
          asel = b10;
          bsel = b01;
          wdsel = b00;
          alufn = b000000;
          regID = b0001;
        
          controller.d = controller.S2;
        //===============================
        
        //WRITE HEIGHT TO 7 (TOPMOST)
        //===============================
        controller.S2: 
        
          write_enable = b1;
          asel = b01;
          bsel = b11;
          wdsel = b00;
          alufn = b000000;
          regID = b0100;
        
          controller.d = controller.S3;
        //=============================== 
        
        //GENERATE RANDOM OBSTACLE
        //===============================
        controller.S3: 
        
          write_enable = b1;
          wdsel = b01;
          regID = b1111;
        
          controller.d = controller.S4;
        //=============================== 
        
        //CHECK BUTTON
        //===============================
        controller.S4: 
        
        
          if(slowClockEdge.out == b1){
          controller.d = controller.S4;        
        }
        //=============================== 

  }
}
