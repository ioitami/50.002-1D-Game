module regfile (
    input clk,  // clock
    input regID[4],
    input dataIn[16],
    input write_enable[1],
    
    output dataOutA[16], //Current Player Score, Player X-Location, Obstacle Cleared
    output ox4[4], //Obstacle Y location
    output ox5[4], //Obst Safe Left
    output ox6[4], //Obst Safe Right
    output ox7[1], //Temp Var
    
    output ox8[10] //High Score  

  ) {
  dff registers[9][16](.clk(clk));

  
  always {
  //Update first if write_enable == 1 before outputting result for next clk cycle 
    
    if(write_enable == 1b1){
       registers.d[regID] = dataIn;
       }
    
    
  //ALWAYS OUTPUT
  //------------------------------------------
    //Compressed data A outputs to avoid too many outputs
    dataOutA[9:0] = registers.q[0][9:0]; //Current Player Score
    dataOutA[13:10] = registers.q[1][3:0]; //Player X-Location
    dataOutA[15:14] = registers.q[2][1:0]; //Obstacle Cleared
    
    //Other Outputs
    ox4 = registers.q[3][3:0]; //Obstacle Y location
    ox5 = registers.q[4][3:0]; //Obst Safe Left
    ox6 = registers.q[5][3:0]; //Obst Safe Right
    ox7 = registers.q[6][0:0]; //Temp Var
    ox8 = registers.q[8][9:0]; //High Score    
  //------------------------------------------
    
}
