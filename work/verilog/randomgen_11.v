/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

/*
   Parameters:
     SEED = 128h432123624b322145316c233351561b13
*/
module randomgen_11 (
    input clk,
    input rst,
    output reg [3:0] out
  );
  
  localparam SEED = 128'h432123624b322145316c233351561b13;
  
  
  wire [1-1:0] M_rng_gen_out;
  reg [1-1:0] M_rng_gen_in;
  edge_detector_16 rng_gen (
    .clk(clk),
    .in(M_rng_gen_in),
    .out(M_rng_gen_out)
  );
  wire [1-1:0] M_edge_out;
  reg [1-1:0] M_edge_in;
  edge_detector_16 L_edge (
    .clk(clk),
    .in(M_edge_in),
    .out(M_edge_out)
  );
  reg [2:0] M_seed_d, M_seed_q = 1'h0;
  reg [3:0] M_numstore_d, M_numstore_q = 1'h0;
  wire [10-1:0] M_slowerclock_value;
  counter_17 slowerclock (
    .clk(clk),
    .rst(rst),
    .value(M_slowerclock_value)
  );
  wire [32-1:0] M_rannum_num;
  reg [1-1:0] M_rannum_next;
  reg [32-1:0] M_rannum_seed;
  pn_gen_18 rannum (
    .clk(clk),
    .rst(rst),
    .next(M_rannum_next),
    .seed(M_rannum_seed),
    .num(M_rannum_num)
  );
  
  always @* begin
    M_seed_d = M_seed_q;
    M_numstore_d = M_numstore_q;
    
    out = 4'hf;
    M_rannum_seed = M_seed_q;
    M_rng_gen_in = M_slowerclock_value;
    M_rannum_next = M_rng_gen_out;
    M_edge_in = M_slowerclock_value;
    if (M_edge_out) begin
      M_seed_d = M_seed_q + 1'h1;
    end
    M_numstore_d = M_rannum_num[0+3-:4];
    out = M_numstore_q;
  end
  
  always @(posedge clk) begin
    M_seed_q <= M_seed_d;
    M_numstore_q <= M_numstore_d;
  end
  
endmodule
