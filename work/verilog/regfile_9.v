/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module regfile_9 (
    input clk,
    input rst,
    input [3:0] regID,
    input [15:0] dataIn,
    input [0:0] write_enable,
    input [3:0] ra,
    input [3:0] rb,
    output reg [15:0] raOut,
    output reg [15:0] rbOut,
    output reg [6:0] ox0,
    output reg [3:0] ox1,
    output reg [3:0] ox3,
    output reg [3:0] ox4,
    output reg [6:0] ox8
  );
  
  
  
  reg [15:0] M_ox0_playerscore_d, M_ox0_playerscore_q = 1'h0;
  reg [15:0] M_ox1_playerXloc_d, M_ox1_playerXloc_q = 1'h0;
  reg [15:0] M_ox3_obsID_d, M_ox3_obsID_q = 1'h0;
  reg [15:0] M_ox4_Yloc_d, M_ox4_Yloc_q = 1'h0;
  reg [15:0] M_ox5_safeleft_d, M_ox5_safeleft_q = 1'h0;
  reg [15:0] M_ox6_saferight_d, M_ox6_saferight_q = 1'h0;
  reg [15:0] M_ox7_tempvar_d, M_ox7_tempvar_q = 1'h0;
  reg [15:0] M_ox8_highscore_d, M_ox8_highscore_q = 1'h0;
  
  always @* begin
    M_ox5_safeleft_d = M_ox5_safeleft_q;
    M_ox1_playerXloc_d = M_ox1_playerXloc_q;
    M_ox8_highscore_d = M_ox8_highscore_q;
    M_ox4_Yloc_d = M_ox4_Yloc_q;
    M_ox0_playerscore_d = M_ox0_playerscore_q;
    M_ox7_tempvar_d = M_ox7_tempvar_q;
    M_ox3_obsID_d = M_ox3_obsID_q;
    M_ox6_saferight_d = M_ox6_saferight_q;
    
    if (write_enable == 1'h1) begin
      
      case (regID)
        4'hf: begin
          M_ox3_obsID_d[0+3-:4] = dataIn[0+3-:4];
          M_ox5_safeleft_d[0+3-:4] = dataIn[4+3-:4];
          M_ox6_saferight_d[0+3-:4] = dataIn[8+3-:4];
        end
        4'h0: begin
          M_ox0_playerscore_d = dataIn;
        end
        4'h1: begin
          M_ox1_playerXloc_d = dataIn;
        end
        4'h3: begin
          M_ox3_obsID_d = dataIn;
        end
        4'h4: begin
          M_ox4_Yloc_d = dataIn;
        end
        4'h5: begin
          M_ox5_safeleft_d = dataIn;
        end
        4'h6: begin
          M_ox6_saferight_d = dataIn;
        end
        4'h7: begin
          M_ox7_tempvar_d = dataIn;
        end
        4'h8: begin
          M_ox8_highscore_d = dataIn;
        end
      endcase
    end
    
    case (ra)
      4'h0: begin
        raOut = M_ox0_playerscore_q;
      end
      4'h1: begin
        raOut = M_ox1_playerXloc_q;
      end
      4'h3: begin
        raOut = M_ox3_obsID_q;
      end
      4'h4: begin
        raOut = M_ox4_Yloc_q;
      end
      4'h5: begin
        raOut = M_ox5_safeleft_q;
      end
      4'h6: begin
        raOut = M_ox6_saferight_q;
      end
      4'h7: begin
        raOut = M_ox7_tempvar_q;
      end
      4'h8: begin
        raOut = M_ox8_highscore_q;
      end
      default: begin
        raOut = 1'h0;
      end
    endcase
    
    case (rb)
      4'h0: begin
        rbOut = M_ox0_playerscore_q;
      end
      4'h1: begin
        rbOut = M_ox1_playerXloc_q;
      end
      4'h3: begin
        rbOut = M_ox3_obsID_q;
      end
      4'h4: begin
        rbOut = M_ox4_Yloc_q;
      end
      4'h5: begin
        rbOut = M_ox5_safeleft_q;
      end
      4'h6: begin
        rbOut = M_ox6_saferight_q;
      end
      4'h7: begin
        rbOut = M_ox7_tempvar_q;
      end
      4'h8: begin
        rbOut = M_ox8_highscore_q;
      end
      default: begin
        rbOut = 1'h0;
      end
    endcase
    ox0 = M_ox0_playerscore_q;
    ox1 = M_ox1_playerXloc_q;
    ox3 = M_ox3_obsID_q;
    ox4 = M_ox4_Yloc_q;
    ox8 = M_ox8_highscore_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_ox0_playerscore_q <= 1'h0;
      M_ox1_playerXloc_q <= 1'h0;
      M_ox3_obsID_q <= 1'h0;
      M_ox4_Yloc_q <= 1'h0;
      M_ox5_safeleft_q <= 1'h0;
      M_ox6_saferight_q <= 1'h0;
      M_ox7_tempvar_q <= 1'h0;
      M_ox8_highscore_q <= 1'h0;
    end else begin
      M_ox0_playerscore_q <= M_ox0_playerscore_d;
      M_ox1_playerXloc_q <= M_ox1_playerXloc_d;
      M_ox3_obsID_q <= M_ox3_obsID_d;
      M_ox4_Yloc_q <= M_ox4_Yloc_d;
      M_ox5_safeleft_q <= M_ox5_safeleft_d;
      M_ox6_saferight_q <= M_ox6_saferight_d;
      M_ox7_tempvar_q <= M_ox7_tempvar_d;
      M_ox8_highscore_q <= M_ox8_highscore_d;
    end
  end
  
endmodule
